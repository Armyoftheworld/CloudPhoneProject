// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: controlMessage.proto

package com.army.scrcpy.server;

public final class ControlMessageProto {
  private ControlMessageProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface ControlMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ControlMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>int32 type = 1;</code>
     * @return The type.
     */
    int getType();

    /**
     * <code>int32 action = 2;</code>
     * @return The action.
     */
    int getAction();

    /**
     * <code>string text = 3;</code>
     * @return The text.
     */
    java.lang.String getText();
    /**
     * <code>string text = 3;</code>
     * @return The bytes for text.
     */
    com.google.protobuf.ByteString
        getTextBytes();

    /**
     * <code>int32 metaState = 4;</code>
     * @return The metaState.
     */
    int getMetaState();

    /**
     * <code>int32 keycode = 5;</code>
     * @return The keycode.
     */
    int getKeycode();

    /**
     * <code>int32 buttons = 6;</code>
     * @return The buttons.
     */
    int getButtons();

    /**
     * <code>int64 pointerId = 7;</code>
     * @return The pointerId.
     */
    long getPointerId();

    /**
     * <code>float pressure = 8;</code>
     * @return The pressure.
     */
    float getPressure();

    /**
     * <code>int32 x = 9;</code>
     * @return The x.
     */
    int getX();

    /**
     * <code>int32 y = 10;</code>
     * @return The y.
     */
    int getY();

    /**
     * <code>int32 width = 11;</code>
     * @return The width.
     */
    int getWidth();

    /**
     * <code>int32 height = 12;</code>
     * @return The height.
     */
    int getHeight();

    /**
     * <code>int32 hScroll = 13;</code>
     * @return The hScroll.
     */
    int getHScroll();

    /**
     * <code>int32 vScroll = 14;</code>
     * @return The vScroll.
     */
    int getVScroll();
  }
  /**
   * Protobuf type {@code ControlMessage}
   */
  public  static final class ControlMessage extends
      com.google.protobuf.GeneratedMessageLite<
          ControlMessage, ControlMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:ControlMessage)
      ControlMessageOrBuilder {
    private ControlMessage() {
      text_ = "";
    }
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>int32 type = 1;</code>
     * @return The type.
     */
    @java.lang.Override
    public int getType() {
      return type_;
    }
    /**
     * <code>int32 type = 1;</code>
     * @param value The type to set.
     */
    private void setType(int value) {
      
      type_ = value;
    }
    /**
     * <code>int32 type = 1;</code>
     */
    private void clearType() {
      
      type_ = 0;
    }

    public static final int ACTION_FIELD_NUMBER = 2;
    private int action_;
    /**
     * <code>int32 action = 2;</code>
     * @return The action.
     */
    @java.lang.Override
    public int getAction() {
      return action_;
    }
    /**
     * <code>int32 action = 2;</code>
     * @param value The action to set.
     */
    private void setAction(int value) {
      
      action_ = value;
    }
    /**
     * <code>int32 action = 2;</code>
     */
    private void clearAction() {
      
      action_ = 0;
    }

    public static final int TEXT_FIELD_NUMBER = 3;
    private java.lang.String text_;
    /**
     * <code>string text = 3;</code>
     * @return The text.
     */
    @java.lang.Override
    public java.lang.String getText() {
      return text_;
    }
    /**
     * <code>string text = 3;</code>
     * @return The bytes for text.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTextBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(text_);
    }
    /**
     * <code>string text = 3;</code>
     * @param value The text to set.
     */
    private void setText(
        java.lang.String value) {
      value.getClass();
  
      text_ = value;
    }
    /**
     * <code>string text = 3;</code>
     */
    private void clearText() {
      
      text_ = getDefaultInstance().getText();
    }
    /**
     * <code>string text = 3;</code>
     * @param value The bytes for text to set.
     */
    private void setTextBytes(
        com.google.protobuf.ByteString value) {
      checkByteStringIsUtf8(value);
      text_ = value.toStringUtf8();
      
    }

    public static final int METASTATE_FIELD_NUMBER = 4;
    private int metaState_;
    /**
     * <code>int32 metaState = 4;</code>
     * @return The metaState.
     */
    @java.lang.Override
    public int getMetaState() {
      return metaState_;
    }
    /**
     * <code>int32 metaState = 4;</code>
     * @param value The metaState to set.
     */
    private void setMetaState(int value) {
      
      metaState_ = value;
    }
    /**
     * <code>int32 metaState = 4;</code>
     */
    private void clearMetaState() {
      
      metaState_ = 0;
    }

    public static final int KEYCODE_FIELD_NUMBER = 5;
    private int keycode_;
    /**
     * <code>int32 keycode = 5;</code>
     * @return The keycode.
     */
    @java.lang.Override
    public int getKeycode() {
      return keycode_;
    }
    /**
     * <code>int32 keycode = 5;</code>
     * @param value The keycode to set.
     */
    private void setKeycode(int value) {
      
      keycode_ = value;
    }
    /**
     * <code>int32 keycode = 5;</code>
     */
    private void clearKeycode() {
      
      keycode_ = 0;
    }

    public static final int BUTTONS_FIELD_NUMBER = 6;
    private int buttons_;
    /**
     * <code>int32 buttons = 6;</code>
     * @return The buttons.
     */
    @java.lang.Override
    public int getButtons() {
      return buttons_;
    }
    /**
     * <code>int32 buttons = 6;</code>
     * @param value The buttons to set.
     */
    private void setButtons(int value) {
      
      buttons_ = value;
    }
    /**
     * <code>int32 buttons = 6;</code>
     */
    private void clearButtons() {
      
      buttons_ = 0;
    }

    public static final int POINTERID_FIELD_NUMBER = 7;
    private long pointerId_;
    /**
     * <code>int64 pointerId = 7;</code>
     * @return The pointerId.
     */
    @java.lang.Override
    public long getPointerId() {
      return pointerId_;
    }
    /**
     * <code>int64 pointerId = 7;</code>
     * @param value The pointerId to set.
     */
    private void setPointerId(long value) {
      
      pointerId_ = value;
    }
    /**
     * <code>int64 pointerId = 7;</code>
     */
    private void clearPointerId() {
      
      pointerId_ = 0L;
    }

    public static final int PRESSURE_FIELD_NUMBER = 8;
    private float pressure_;
    /**
     * <code>float pressure = 8;</code>
     * @return The pressure.
     */
    @java.lang.Override
    public float getPressure() {
      return pressure_;
    }
    /**
     * <code>float pressure = 8;</code>
     * @param value The pressure to set.
     */
    private void setPressure(float value) {
      
      pressure_ = value;
    }
    /**
     * <code>float pressure = 8;</code>
     */
    private void clearPressure() {
      
      pressure_ = 0F;
    }

    public static final int X_FIELD_NUMBER = 9;
    private int x_;
    /**
     * <code>int32 x = 9;</code>
     * @return The x.
     */
    @java.lang.Override
    public int getX() {
      return x_;
    }
    /**
     * <code>int32 x = 9;</code>
     * @param value The x to set.
     */
    private void setX(int value) {
      
      x_ = value;
    }
    /**
     * <code>int32 x = 9;</code>
     */
    private void clearX() {
      
      x_ = 0;
    }

    public static final int Y_FIELD_NUMBER = 10;
    private int y_;
    /**
     * <code>int32 y = 10;</code>
     * @return The y.
     */
    @java.lang.Override
    public int getY() {
      return y_;
    }
    /**
     * <code>int32 y = 10;</code>
     * @param value The y to set.
     */
    private void setY(int value) {
      
      y_ = value;
    }
    /**
     * <code>int32 y = 10;</code>
     */
    private void clearY() {
      
      y_ = 0;
    }

    public static final int WIDTH_FIELD_NUMBER = 11;
    private int width_;
    /**
     * <code>int32 width = 11;</code>
     * @return The width.
     */
    @java.lang.Override
    public int getWidth() {
      return width_;
    }
    /**
     * <code>int32 width = 11;</code>
     * @param value The width to set.
     */
    private void setWidth(int value) {
      
      width_ = value;
    }
    /**
     * <code>int32 width = 11;</code>
     */
    private void clearWidth() {
      
      width_ = 0;
    }

    public static final int HEIGHT_FIELD_NUMBER = 12;
    private int height_;
    /**
     * <code>int32 height = 12;</code>
     * @return The height.
     */
    @java.lang.Override
    public int getHeight() {
      return height_;
    }
    /**
     * <code>int32 height = 12;</code>
     * @param value The height to set.
     */
    private void setHeight(int value) {
      
      height_ = value;
    }
    /**
     * <code>int32 height = 12;</code>
     */
    private void clearHeight() {
      
      height_ = 0;
    }

    public static final int HSCROLL_FIELD_NUMBER = 13;
    private int hScroll_;
    /**
     * <code>int32 hScroll = 13;</code>
     * @return The hScroll.
     */
    @java.lang.Override
    public int getHScroll() {
      return hScroll_;
    }
    /**
     * <code>int32 hScroll = 13;</code>
     * @param value The hScroll to set.
     */
    private void setHScroll(int value) {
      
      hScroll_ = value;
    }
    /**
     * <code>int32 hScroll = 13;</code>
     */
    private void clearHScroll() {
      
      hScroll_ = 0;
    }

    public static final int VSCROLL_FIELD_NUMBER = 14;
    private int vScroll_;
    /**
     * <code>int32 vScroll = 14;</code>
     * @return The vScroll.
     */
    @java.lang.Override
    public int getVScroll() {
      return vScroll_;
    }
    /**
     * <code>int32 vScroll = 14;</code>
     * @param value The vScroll to set.
     */
    private void setVScroll(int value) {
      
      vScroll_ = value;
    }
    /**
     * <code>int32 vScroll = 14;</code>
     */
    private void clearVScroll() {
      
      vScroll_ = 0;
    }

    public static com.army.scrcpy.server.ControlMessageProto.ControlMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.army.scrcpy.server.ControlMessageProto.ControlMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.army.scrcpy.server.ControlMessageProto.ControlMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.army.scrcpy.server.ControlMessageProto.ControlMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.army.scrcpy.server.ControlMessageProto.ControlMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.army.scrcpy.server.ControlMessageProto.ControlMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.army.scrcpy.server.ControlMessageProto.ControlMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.army.scrcpy.server.ControlMessageProto.ControlMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.army.scrcpy.server.ControlMessageProto.ControlMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.army.scrcpy.server.ControlMessageProto.ControlMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.army.scrcpy.server.ControlMessageProto.ControlMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.army.scrcpy.server.ControlMessageProto.ControlMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(com.army.scrcpy.server.ControlMessageProto.ControlMessage prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code ControlMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.army.scrcpy.server.ControlMessageProto.ControlMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:ControlMessage)
        com.army.scrcpy.server.ControlMessageProto.ControlMessageOrBuilder {
      // Construct using com.army.scrcpy.server.ControlMessageProto.ControlMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>int32 type = 1;</code>
       * @return The type.
       */
      @java.lang.Override
      public int getType() {
        return instance.getType();
      }
      /**
       * <code>int32 type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(int value) {
        copyOnWrite();
        instance.setType(value);
        return this;
      }
      /**
       * <code>int32 type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        copyOnWrite();
        instance.clearType();
        return this;
      }

      /**
       * <code>int32 action = 2;</code>
       * @return The action.
       */
      @java.lang.Override
      public int getAction() {
        return instance.getAction();
      }
      /**
       * <code>int32 action = 2;</code>
       * @param value The action to set.
       * @return This builder for chaining.
       */
      public Builder setAction(int value) {
        copyOnWrite();
        instance.setAction(value);
        return this;
      }
      /**
       * <code>int32 action = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAction() {
        copyOnWrite();
        instance.clearAction();
        return this;
      }

      /**
       * <code>string text = 3;</code>
       * @return The text.
       */
      @java.lang.Override
      public java.lang.String getText() {
        return instance.getText();
      }
      /**
       * <code>string text = 3;</code>
       * @return The bytes for text.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTextBytes() {
        return instance.getTextBytes();
      }
      /**
       * <code>string text = 3;</code>
       * @param value The text to set.
       * @return This builder for chaining.
       */
      public Builder setText(
          java.lang.String value) {
        copyOnWrite();
        instance.setText(value);
        return this;
      }
      /**
       * <code>string text = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearText() {
        copyOnWrite();
        instance.clearText();
        return this;
      }
      /**
       * <code>string text = 3;</code>
       * @param value The bytes for text to set.
       * @return This builder for chaining.
       */
      public Builder setTextBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setTextBytes(value);
        return this;
      }

      /**
       * <code>int32 metaState = 4;</code>
       * @return The metaState.
       */
      @java.lang.Override
      public int getMetaState() {
        return instance.getMetaState();
      }
      /**
       * <code>int32 metaState = 4;</code>
       * @param value The metaState to set.
       * @return This builder for chaining.
       */
      public Builder setMetaState(int value) {
        copyOnWrite();
        instance.setMetaState(value);
        return this;
      }
      /**
       * <code>int32 metaState = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMetaState() {
        copyOnWrite();
        instance.clearMetaState();
        return this;
      }

      /**
       * <code>int32 keycode = 5;</code>
       * @return The keycode.
       */
      @java.lang.Override
      public int getKeycode() {
        return instance.getKeycode();
      }
      /**
       * <code>int32 keycode = 5;</code>
       * @param value The keycode to set.
       * @return This builder for chaining.
       */
      public Builder setKeycode(int value) {
        copyOnWrite();
        instance.setKeycode(value);
        return this;
      }
      /**
       * <code>int32 keycode = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeycode() {
        copyOnWrite();
        instance.clearKeycode();
        return this;
      }

      /**
       * <code>int32 buttons = 6;</code>
       * @return The buttons.
       */
      @java.lang.Override
      public int getButtons() {
        return instance.getButtons();
      }
      /**
       * <code>int32 buttons = 6;</code>
       * @param value The buttons to set.
       * @return This builder for chaining.
       */
      public Builder setButtons(int value) {
        copyOnWrite();
        instance.setButtons(value);
        return this;
      }
      /**
       * <code>int32 buttons = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearButtons() {
        copyOnWrite();
        instance.clearButtons();
        return this;
      }

      /**
       * <code>int64 pointerId = 7;</code>
       * @return The pointerId.
       */
      @java.lang.Override
      public long getPointerId() {
        return instance.getPointerId();
      }
      /**
       * <code>int64 pointerId = 7;</code>
       * @param value The pointerId to set.
       * @return This builder for chaining.
       */
      public Builder setPointerId(long value) {
        copyOnWrite();
        instance.setPointerId(value);
        return this;
      }
      /**
       * <code>int64 pointerId = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearPointerId() {
        copyOnWrite();
        instance.clearPointerId();
        return this;
      }

      /**
       * <code>float pressure = 8;</code>
       * @return The pressure.
       */
      @java.lang.Override
      public float getPressure() {
        return instance.getPressure();
      }
      /**
       * <code>float pressure = 8;</code>
       * @param value The pressure to set.
       * @return This builder for chaining.
       */
      public Builder setPressure(float value) {
        copyOnWrite();
        instance.setPressure(value);
        return this;
      }
      /**
       * <code>float pressure = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearPressure() {
        copyOnWrite();
        instance.clearPressure();
        return this;
      }

      /**
       * <code>int32 x = 9;</code>
       * @return The x.
       */
      @java.lang.Override
      public int getX() {
        return instance.getX();
      }
      /**
       * <code>int32 x = 9;</code>
       * @param value The x to set.
       * @return This builder for chaining.
       */
      public Builder setX(int value) {
        copyOnWrite();
        instance.setX(value);
        return this;
      }
      /**
       * <code>int32 x = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearX() {
        copyOnWrite();
        instance.clearX();
        return this;
      }

      /**
       * <code>int32 y = 10;</code>
       * @return The y.
       */
      @java.lang.Override
      public int getY() {
        return instance.getY();
      }
      /**
       * <code>int32 y = 10;</code>
       * @param value The y to set.
       * @return This builder for chaining.
       */
      public Builder setY(int value) {
        copyOnWrite();
        instance.setY(value);
        return this;
      }
      /**
       * <code>int32 y = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearY() {
        copyOnWrite();
        instance.clearY();
        return this;
      }

      /**
       * <code>int32 width = 11;</code>
       * @return The width.
       */
      @java.lang.Override
      public int getWidth() {
        return instance.getWidth();
      }
      /**
       * <code>int32 width = 11;</code>
       * @param value The width to set.
       * @return This builder for chaining.
       */
      public Builder setWidth(int value) {
        copyOnWrite();
        instance.setWidth(value);
        return this;
      }
      /**
       * <code>int32 width = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearWidth() {
        copyOnWrite();
        instance.clearWidth();
        return this;
      }

      /**
       * <code>int32 height = 12;</code>
       * @return The height.
       */
      @java.lang.Override
      public int getHeight() {
        return instance.getHeight();
      }
      /**
       * <code>int32 height = 12;</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(int value) {
        copyOnWrite();
        instance.setHeight(value);
        return this;
      }
      /**
       * <code>int32 height = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        copyOnWrite();
        instance.clearHeight();
        return this;
      }

      /**
       * <code>int32 hScroll = 13;</code>
       * @return The hScroll.
       */
      @java.lang.Override
      public int getHScroll() {
        return instance.getHScroll();
      }
      /**
       * <code>int32 hScroll = 13;</code>
       * @param value The hScroll to set.
       * @return This builder for chaining.
       */
      public Builder setHScroll(int value) {
        copyOnWrite();
        instance.setHScroll(value);
        return this;
      }
      /**
       * <code>int32 hScroll = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearHScroll() {
        copyOnWrite();
        instance.clearHScroll();
        return this;
      }

      /**
       * <code>int32 vScroll = 14;</code>
       * @return The vScroll.
       */
      @java.lang.Override
      public int getVScroll() {
        return instance.getVScroll();
      }
      /**
       * <code>int32 vScroll = 14;</code>
       * @param value The vScroll to set.
       * @return This builder for chaining.
       */
      public Builder setVScroll(int value) {
        copyOnWrite();
        instance.setVScroll(value);
        return this;
      }
      /**
       * <code>int32 vScroll = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearVScroll() {
        copyOnWrite();
        instance.clearVScroll();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:ControlMessage)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.army.scrcpy.server.ControlMessageProto.ControlMessage();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "type_",
              "action_",
              "text_",
              "metaState_",
              "keycode_",
              "buttons_",
              "pointerId_",
              "pressure_",
              "x_",
              "y_",
              "width_",
              "height_",
              "hScroll_",
              "vScroll_",
            };
            java.lang.String info =
                "\u0000\u000e\u0000\u0000\u0001\u000e\u000e\u0000\u0000\u0000\u0001\u0004\u0002\u0004" +
                "\u0003\u0208\u0004\u0004\u0005\u0004\u0006\u0004\u0007\u0002\b\u0001\t\u0004\n\u0004" +
                "\u000b\u0004\f\u0004\r\u0004\u000e\u0004";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.army.scrcpy.server.ControlMessageProto.ControlMessage> parser = PARSER;
          if (parser == null) {
            synchronized (com.army.scrcpy.server.ControlMessageProto.ControlMessage.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<com.army.scrcpy.server.ControlMessageProto.ControlMessage>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:ControlMessage)
    private static final com.army.scrcpy.server.ControlMessageProto.ControlMessage DEFAULT_INSTANCE;
    static {
      ControlMessage defaultInstance = new ControlMessage();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ControlMessage.class, defaultInstance);
    }

    public static com.army.scrcpy.server.ControlMessageProto.ControlMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ControlMessage> PARSER;

    public static com.google.protobuf.Parser<ControlMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
